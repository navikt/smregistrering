name: Deploy to dev
on:
  push:
    branches:
      - '*'
      - '!master'
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/smregistrering-dev:${{ github.sha }}
jobs:
  # JOB to run change detection
  changes:
    name: Change detection
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Detect changed paths
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'server/**'
              - 'redis-config.yml'
              - 'naiserator-dev.yaml'

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install deps for client
        run: npm ci
        working-directory: ./client
      - name: Run unit tests for client
        env:
          CI: true
        run: npm test
        working-directory: ./client

  integration-test:
    name: Run integration tests with Cypress
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      - name: Install npm dependencies
        working-directory: ./client
        run: npm ci
      - name: Run cypress
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./client
          install: false
          record: false
          browser: chrome # fails with default (electron)
          start: npm run start:integration
          wait-on: http://localhost:4321
      - uses: actions/upload-artifact@v1
        if: ${{ failure() }}
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  deploy-redis:
    name: Deploy redis to dev-fss
    needs: [changes, test, integration-test]
    if: ${{ needs.changes.outputs.backend == 'true' }} # Only run on changes related to backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Deploy Redis to dev-fss
        uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: redis-config.yml

  build-push-deploy:
    name: Build, push & deploy
    runs-on: ubuntu-latest
    needs: [changes, test, integration-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies for server
        run: npm ci
        working-directory: ./server
      - name: Install dependencies for client
        run: npm ci
        working-directory: ./client
      - name: Build server
        run: npm run compile
        working-directory: ./server
      - name: Build client
        env:
          REACT_APP_HEAD_URL: https://app-q1.dev.adeo.no
          REACT_APP_FRONTEND_LOGGER_URL: https://app-q1.dev.adeo.no/frontendlogger
          REACT_APP_GOSYS_URL: https://gosys.nais.preprod.local/gosys/bruker/brukeroversikt.jsf
        run: npm run build
        working-directory: ./client
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
      - name: Deploy app to dev-fss
        uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator-dev.yml
